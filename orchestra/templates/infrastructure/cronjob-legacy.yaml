{{ if .Values.operator.legacy }}
{{ if .Capabilities.APIVersions.Has "batch/v1/CronJob" }}
apiVersion: batch/v1
{{ else }}
apiVersion: batch/v1beta1
{{ end }}
kind: CronJob
metadata:
  labels:
    app: openunison-{{ .Release.Name }}
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-{{ .Release.Name }}
    app.kubernetes.io/component: cert-management
    app.kubernetes.io/part-of: openunison
  name: check-certs-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "20"
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      backoffLimit: 1
      template:
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/name: openunison
            app.kubernetes.io/instance: openunison-{{ .Release.Name }}
            app.kubernetes.io/component: cert-management
            app.kubernetes.io/part-of: openunison
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          containers:
          - command:
            - java
            - -jar
            - /usr/local/artifactdeploy/artifact-deploy.jar
            - -extraCertsPath
            - /etc/extracerts
            - -installScriptURL
            - file:///etc/input-maps/cert-check.js
            - -kubernetesURL
            - https://kubernetes.default.svc.cluster.local
            - -rootCaPath
            - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - -secretsPath
            - /etc/input-maps/input.props
            - -tokenPath
            - /var/run/secrets/kubernetes.io/serviceaccount/token
            - -deploymentTemplate
            - file:///etc/input-maps/deployment.yaml
            env:
            - name: CERT_DAYS_EXPIRE
              value: "10"
            image: {{ .Values.cert_update_image | default "docker.io/tremolosecurity/kubernetes-artifact-deployment:1.1.0" }}
            imagePullPolicy: IfNotPresent
            name: check-certs-{{ .Release.Name }}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /etc/extracerts
              name: extra-certs-dir
              readOnly: true
            - mountPath: /etc/input-maps
              name: input-maps
              readOnly: true
            {{ if .Values.services.resources }}
            resources:
              {{ if .Values.services.resources.requests }}
              requests:
                {{ if .Values.services.resources.requests.memory }}
                memory: {{ .Values.services.resources.requests.memory | quote }}
                {{ end }}

                {{ if .Values.services.resources.requests.cpu }}
                cpu: {{ .Values.services.resources.requests.cpu | quote }}
                {{ end }}

              {{ else }}
              requests: {}
              {{ end }}

              {{ if .Values.services.resources.limits }}
              limits:
                {{ if .Values.services.resources.limits.memory }}
                memory: {{ .Values.services.resources.limits.memory | quote }}
                {{ end }}

                {{ if .Values.services.resources.limits.cpu }}
                cpu: {{ .Values.services.resources.limits.cpu | quote }}
                {{ end }}

              {{ else }}
              limits: {}
              {{ end }}
            {{ else }}
            resources: {}
            {{ end }}
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: openunison-operator
          serviceAccountName: openunison-operator
          terminationGracePeriodSeconds: 30
          volumes:
          - configMap:
              defaultMode: 420
              name: cert-controller-js-{{ .Release.Name }}
            name: extra-certs-dir
          - configMap:
              defaultMode: 420
              name: cert-controller-js-{{ .Release.Name }}
            name: input-maps
          {{ $length := len .Values.services.node_selectors }}
          {{ if eq $length 0  }}
          nodeSelector: {}
          {{ else }}
          nodeSelector: {{ range $key,$value := .Values.services.node_selectors }}
            {{ $key }}: {{ $value | quote }}
          {{ end }}
          {{ end }}
          {{ if .Values.services.pullSecret }}
          imagePullSecrets:
          - name: {{  .Values.services.pullSecret | quote }}
          {{ end }}
  schedule: 0 2 * * *
  successfulJobsHistoryLimit: 3
  suspend: false
{{ end }}
