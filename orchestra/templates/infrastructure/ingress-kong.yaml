{{ if eq .Values.network.ingress_type "kong" }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "20"
    konghq.com/preserve-host: "true"
    {{ if .Values.network.force_redirect_to_tls }}
    konghq.com/protocols: https
    konghq.com/https-redirect-status-code: "301" 
    {{ end }}
    konghq.com/tls-verify: "false"
    {{ if .Values.network.kong.plugins }}
    konghq.com/plugins: "session-cookie,{{ .Values.network.kong.plugins }}"
    {{ else }}
    konghq.com/plugins: "session-cookie"
    {{ end }}
    {{ range $key,$value := .Values.network.ingress_annotations }}
    {{ if not ( eq $key "kubernetes.io/ingress.class"  )}}
    {{ $key }}: {{ quote $value }}
    {{ end }}
    {{ end }}
  name: openunison-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-{{ .Release.Name }}
    app.kubernetes.io/component: ingress-simple
    app.kubernetes.io/part-of: openunison
spec:
  ingressClassName: {{ index .Values.network.ingress_annotations "kubernetes.io/ingress.class" | default "kong" }}
  rules:
  - host: {{ .Values.network.openunison_host }}
    http:
      paths:
      - backend:
          service:
            name: openunison-{{ .Release.Name }}
            port: 
              number: 443
        path: "/"
        pathType: Prefix
  {{ if .Values.dashboard.enabled }}
  - host: {{ .Values.network.dashboard_host }}
    http:
      paths:
      - backend:
          service:
            name: openunison-{{ .Release.Name }}
            port:
              number: 443
        path: "/"
        pathType: Prefix
  {{ end }}
  {{- $root := . -}}
  {{ range $app := $root.Values.openunison.apps }}
  - host: {{ (urlParse $app.badgeUrl).host }}
    http:
      paths:
      - backend:
          service:
            name: openunison-{{ $root.Release.Name }}
            port:
              number: 443
        path: "/"
        pathType: Prefix
  {{ end }}
  {{ if eq .Values.enable_impersonation true }}
  {{ if not .Values.network.kong.allow_spdy }}
  - host: {{ .Values.network.api_server_host }}
    http:
      paths:
      - backend:
          service:
            {{ if eq .Values.impersonation.use_jetstack true }}
            name: kube-oidc-proxy-{{ .Release.Name }}
            {{ else }}
            name: openunison-{{ .Release.Name }}
            {{ end }}
            port:
              number: 443
        path: "/"
        pathType: Prefix
  {{ end }}
  {{ end }}
  {{ if and (.Values.openunison.management_proxy) (eq .Values.openunison.management_proxy.enabled true)  }}
  - host: {{ .Values.openunison.management_proxy.host }}
    http:
      paths:
      - backend:
          service:
            name: kube-management-proxy-{{ .Release.Name }}
            port:
              number: 443
        path: "/"
        pathType: Prefix
  {{ end }}
  tls:
  - hosts:
    - {{ .Values.network.openunison_host }}
    {{ if .Values.dashboard.enabled }}
    - {{ .Values.network.dashboard_host }}
    {{ end }}
    {{ if eq .Values.enable_impersonation true }}
    {{ if not .Values.network.kong.allow_spdy }}
    - {{ .Values.network.api_server_host }}
    {{ end }}
    {{ end }}
    {{ if and (.Values.openunison.management_proxy) (eq .Values.openunison.management_proxy.enabled true)  }}
    - {{ .Values.openunison.management_proxy.host }}
    {{ end }}
    {{ range $app := $root.Values.openunison.apps }}
    - {{ (urlParse $app.badgeUrl).host }}
    {{ end }}
    secretName: ou-tls-certificate
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: session-cookie
  namespace: {{ .Release.Namespace }}
config:
  cookie_name: "ingress_session"  # Name of the cookie
plugin: session
{{ if .Values.network.kong.allow_spdy }}
# ---
# apiVersion: configuration.konghq.com/v1beta1
# kind: TCPIngress
# metadata:
#   name: kube-oidc-proxy-passthrough-{{ .Release.Name }}
#   namespace: {{ .Release.Namespace }}
#   annotations:
#     kubernetes.io/ingress.class: {{ index .Values.network.ingress_annotations "kubernetes.io/ingress.class" | default "kong" }}
# spec:
#   tls:
#   - hosts:
#     - {{ .Values.network.api_server_host }}
#     secretName: unison-tls
#   rules:
#     - port: 443
#       host: {{ .Values.network.api_server_host }}
#       backend:
#         serviceName: kube-oidc-proxy-{{ .Release.Name }}
#         servicePort: 443
{{ end }}
{{ end }}