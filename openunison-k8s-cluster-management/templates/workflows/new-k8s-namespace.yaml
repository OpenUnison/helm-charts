{{- $root := . -}}
{{ if .Values.openunison.naas.workflows.new_namespace.use_default }}
---
apiVersion: openunison.tremolo.io/v1
kind: Workflow
metadata:
  name: new-k8s-namespace
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "40"
spec:
  description: Create New Namespace
  inList: false
  label: Create New Namespace
  orgId: 04901973-5f4c-46d9-9e22-55e88e168776
  tasks: |-
           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.CopyFromUserToRequest
             params:
               attribute:
               - nameSpace
               - cluster
               - gitPath
               {{ if .Values.openunison.naas.groups.external.enabled }}
               {{ range $role := .Values.openunison.naas.groups.default }}
               - {{ $role.external.fieldName }}
               {{ end }}
               {{ range $role := .Values.openunison.naas.groups.roles }}
               - {{ $role.external.fieldName }}
               {{ end }}
               {{ if .Values.openunison.naas.groups.internal.enabled }}
               - enableInternal
               {{ end }}
               {{ end }}
               {{ range $attr := .Values.openunison.naas.forms.new_namespace.additional_attributes }}
               - {{ $attr.name }}
               {{ end }}
               keepInUser: "true"

           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.JavaScriptTask
             params:
               javaScript: |-
                 function init(task,params) {
                   // nothing to do
                 }
 
                 function reInit(task) {
                   // do nothing
                 }
 
                 function doTask(user,request) {
                   var targetName = request.get("cluster");
                   GlobalEntries = Java.type("com.tremolosecurity.server.GlobalEntries");
                   var target = GlobalEntries.getGlobalEntries().getConfigManager().getProvisioningEngine().getTarget(targetName).getProvider();
                   request.put("clusterLabel",target.getLabel());
                   
                   return true;
                 }

           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.LoadAttributes
             params:
               nameAttr: uid
               name: 
               - givenName
               - sn
               - mail

           
           
           {{ if .Values.openunison.naas.groups.internal.enabled }}
           - taskType: addAttribute
             name: enableInternal
             value: enabled
             addToRequest: true
           {{ else }}
           - taskType: addAttribute
             name: enableInternal
             value: disabled
             addToRequest: true
           {{ end }}
           
           
           - taskType: customTask
             className: com.tremolosecurity.provisioning.customTasks.PrintUserInfo
             params:
               message: pre-approval

           - taskType: approval
             emailTemplate: A new namespace has been requested
             mailAttr: mail
             failureEmailSubject: Namespace not approved
             failureEmailMsg: |-
               Because:
               ${reason}
             label: Create New Namespace - $cluster$ - $nameSpace$
             approvers:
             - scope: group
               constraint: cn=administrators{{ .Values.openunison.naas.groups.external.suffix }},ou=groups,ou=shadow,o=Tremolo
             - scope: group
               constraint: cn=administrators{{ .Values.openunison.naas.groups.internal.suffix }},ou=groups,ou=shadow,o=Tremolo
             onSuccess:
             - taskType: callWorkflow
               name: create-new-namespace
             
{{ end }}