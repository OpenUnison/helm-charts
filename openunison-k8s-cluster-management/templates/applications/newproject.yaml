{{ if .Values.openunison.naas.forms.new_namespace.use_default }}
{{ $root := . }}
---
apiVersion: openunison.tremolo.io/v1
kind: Application
metadata:
  name: scale-newproject
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-{{ .Release.Name }}
    app.kubernetes.io/component: openunison-applications
    app.kubernetes.io/part-of: openunison
  annotations:
    argocd.argoproj.io/sync-wave: "40"
spec:
  azTimeoutMillis: 3000
  isApp: true
  urls:
  - authChain: login-service
    azRules:
    - constraint: o=Tremolo
      scope: dn
    filterChain:
    - className: com.tremolosecurity.proxy.filters.CheckK8sTargetMetadata
      params: {}
    hosts:
    - '#[OU_HOST]'
    results:
      auFail: default-login-failure
      azFail: default-login-failure
    uri: /newproject/target-metadata
  - hosts:
    - "#[OU_HOST]"
    filterChain: 
    - className: com.tremolosecurity.proxy.filters.XForward
      params:
        createHeaders: "false"
    - className: com.tremolosecurity.proxy.filters.SetNoCacheHeaders
      params: {}
    - className: com.tremolosecurity.proxy.filters.MapUriRoot
      params:
        newRoot: /register
        paramName: registerURI
    uri: "/newproject"
    proxyTo: http://ouhtml-{{ .Values.openunison.orchestra_login_portal_name }}.{{ .Release.Namespace }}.svc:8080${registerURI}
    authChain: login-service
    overrideHost: true
    overrideReferer: true
    azRules:
    - scope: dn
      constraint: "o=Tremolo"
    results: 
      azFail: default-login-failure
      auFail: default-login-failure
  - hosts:
    - "#[OU_HOST]"
    filterChain:
    - className: com.tremolosecurity.scalejs.register.ws.ScaleRegister
      params:
        displayNameAttribute: "sub"
        frontPage.title: "Create New Namespace"
        frontPage.text: "Use this page to request the creation of a new namespace.  Once the namespace is approved you will be the first approver and administrator.  You will be notified when the namespace is ready."
        uidAttributeName: uid
        workflowName: ""
        logoutURL: "/logout"
        homeURL: "/"
        preSetPassword: "false"
        
        requireReCaptcha: "false"
        rcSiteKey: ""
        rcSecret: ""
        requireTermsAndConditions: "false"
        termsAndCondisionsText: ""
        useCallWorkflowClass: "true"
        callWorkflowClassName: "com.tremolosecurity.scalejs.K8sProjectCheck"
        submitLoggedInUser: "true"

        attributeNames:
        - cluster
        - nameSpace
        {{ range $attr := .Values.openunison.naas.forms.new_namespace.additional_attributes }}
        - {{ $attr.name }}
        {{ end }}
        {{ if .Values.openunison.naas.groups.external.enabled }}
        {{ range $role := .Values.openunison.naas.groups.default }}
        - {{ $role.external.fieldName }}
        {{ end }}
        {{ range $role := .Values.openunison.naas.groups.roles }}
        - {{ $role.external.fieldName }}
        {{ end }}
        
        {{ end }}
        - gitUrl
        - gitPath
        - gitSshKey

        
        cluster.displayName: "Cluster"
        cluster.readOnly: "false"
        cluster.required: "true"
        cluster.regEx: ".*"
        cluster.regExFailedMsg: "Invalid cluster"
        cluster.minChars: "0"
        cluster.maxChars: "63"
        cluster.unique: "false"
        cluster.type: "list"
        {{ if .Values.openunison.legacy }}
        cluster.editJavaScriptFunction: "update_new_project(this,attr_cfg)"
        {{ else }}
        cluster.editJavaScriptFunction: "update_new_project(eventObj)"
        {{ end }}
        cluster.dynamicValueSource.className: "com.tremolosecurity.scalejs.ListClusters"
        
        nameSpace.displayName: "Namespace Name"
        nameSpace.readOnly: "false"
        nameSpace.required: "true"
        nameSpace.regEx: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        nameSpace.regExFailedMsg: "Invalid namespace name, must be a valid DNS host name"
        nameSpace.minChars: "0"
        nameSpace.maxChars: "63"
        nameSpace.unique: "false"
        nameSpace.type: "text"

        {{ range $attr := .Values.openunison.naas.forms.new_namespace.additional_attributes }}
        {{ $attr.name }}.displayName: "{{ $attr.displayName }}"
        {{ $attr.name }}.readOnly: "false"
        
        {{ if or (not (hasKey $attr "required")) (eq (coalesce $attr.required false) true) }}
        {{ $attr.name }}.required: "true"
        {{ else }}
        {{ $attr.name }}.required: "false"
        {{ end }}

        {{ $attr.name }}.regEx: "{{ $attr.regEx }}"
        {{ $attr.name }}.regExFailedMsg: "{{ $attr.regExFailedMsg }}"
        {{ $attr.name }}.minChars: "{{ $attr.minChars }}"
        {{ $attr.name }}.maxChars: "{{ $attr.maxChars }}"
        {{ $attr.name }}.unique: "{{ $attr.unique }}"
        {{ $attr.name }}.type: "{{ $attr.type }}"
        {{ if or $attr.show (not (hasKey $attr "show")) }}
        {{ $attr.name }}.show: "true"
        {{ else }}
        {{ $attr.name }}.show: "false"
        {{ end }}
        
        {{ if $attr.editJavaScriptFunction }}
        {{ $attr.name }}.editJavaScriptFunction: "{{ $attr.editJavaScriptFunction }}"
        {{ end }}
        {{ if $attr.dynamicValueSource }}
        {{ $attr.name }}.dynamicValueSource.className: "{{ $attr.dynamicValueSource.className }}"
        {{ $attr.name }}.dynamicValueSource.config:
            {{ range $key,$value := $attr.dynamicValueSource.config }}
            - "{{ $key }}={{ $value }}"
            {{ end }}

        {{ end }}
        {{ if $attr.values }}
        {{ $attr.name }}.values:
        {{ range $key,$value := $attr.values }}
        - "{{ $value }}"
        {{ end }}
        {{ end }}

        {{ end }}



        {{ if .Values.openunison.naas.groups.external.enabled }}
        
        
        {{ range $role := .Values.openunison.naas.groups.default }}
        
        {{ $role.external.fieldName }}.displayName: {{ $role.external.label }}
        {{ $role.external.fieldName }}.realOnly: "false"
        {{ $role.external.fieldName }}.required: "{{ $role.external.required }}"
        {{ $role.external.fieldName }}.regEx: ".*"
        {{ $role.external.fieldName }}.redExFailedMsg: {{ $role.external.errorMessage }}
        {{ $role.external.fieldName }}.minChars: "0"
        {{ $role.external.fieldName }}.maxChars: "255"
        {{ $role.external.fieldName }}.unique: "false"
        {{ if $root.Values.active_directory }}
        {{ if $role.external.required }}
        {{ $role.external.fieldName }}.type: "text-list-box"
        {{ else }}
        {{ $role.external.fieldName }}.type: "chk-text-list-box"
        {{ end }}
        {{ $role.external.fieldName }}.dynamicValueSource.className: "com.tremolosecurity.scalejs.register.dynamicSource.LoadFromLDAP"
        {{ $role.external.fieldName }}.dynamicValueSource.config: 
        - "nameField=distinguishedName"
        - "valueField=distinguishedName"
        - "searchField=cn"
        - "maxEntries=10"
        {{ if $root.Values.active_directory.group_search_base }}
        - "searchBase={{ $root.Values.active_directory.group_search_base }},ou=activedirectory,o=Data"
        {{ else }}
        - "searchBase=ou=activedirectory,o=Data"
        {{ end }}
        - "errorMessage=Invalid group name"
        - "objectClass=groupofnames"
        - "sort=true"
        {{ else if $root.Values.oidc}}
        {{ if eq $root.Values.oidc.type "okta" }}
        {{ if $role.external.required }}
        {{ $role.external.fieldName }}.type: "text-list-box"
        {{ else }}
        {{ $role.external.fieldName }}.type: "chk-text-list-box"
        {{ end }}
        {{ $role.external.fieldName }}.dynamicValueSource.className: "com.tremolosecurity.scalejs.register.dynamicSource.LoadGroupsFromOkta"
        {{ $role.external.fieldName }}.dynamicValueSource.config: 
        - "targetName=okta"
        - "maxEntries=10"
        - "errorMessage=Invalid group name"

        {{ else if eq $root.Values.oidc.type "entraid" }}
        {{ if $role.external.required }}
        {{ $role.external.fieldName }}.type: "text-list-box"
        {{ else }}
        {{ $role.external.fieldName }}.type: "chk-text-list-box"
        {{ end }}
        {{ $role.external.fieldName }}.dynamicValueSource.className: "com.tremolosecurity.scalejs.register.dynamicSource.EntraIDSource"
        {{ $role.external.fieldName }}.dynamicValueSource.config: 
        - "target=azuread"
        - "maxEntries=10"
        {{ end }}
        {{ else if $root.Values.github}}
        {{ if $root.Values.github.naas }}
        {{ if $role.external.required }}
        {{ $role.external.fieldName }}.type: "text-list-box"
        {{ else }}
        {{ $role.external.fieldName }}.type: "chk-text-list-box"
        {{ end }}
        {{ $role.external.fieldName }}.dynamicValueSource.className: "com.tremolosecurity.scalejs.register.dynamicSource.LoadTeamsFromGitHub"
        {{ $role.external.fieldName }}.dynamicValueSource.config: 
        - "targetName=github"
        - "maxEntries=10"
        - "errorMessage=Invalid group name"
        {{ end }}
        
        
        {{ else }}
        {{ $role.external.fieldName }}.type: "text"
        {{ end }}


        {{ end }}

        {{ range $role := .Values.openunison.naas.groups.roles }}
        
        {{ $role.external.fieldName }}.displayName: {{ $role.external.label }}
        {{ $role.external.fieldName }}.realOnly: "false"
        {{ $role.external.fieldName }}.required: "{{ $role.external.required }}"
        {{ $role.external.fieldName }}.regEx: ".*"
        {{ $role.external.fieldName }}.redExFailedMsg: {{ $role.external.errorMessage }}
        {{ $role.external.fieldName }}.minChars: "0"
        {{ $role.external.fieldName }}.maxChars: "255"
        {{ $role.external.fieldName }}.unique: "false"
        {{ if $root.Values.active_directory }}
        {{ if $role.external.required }}
        {{ $role.external.fieldName }}.type: "text-list-box"
        {{ else }}
        {{ $role.external.fieldName }}.type: "chk-text-list-box"
        {{ end }}
        {{ $role.external.fieldName }}.dynamicValueSource.className: "com.tremolosecurity.scalejs.register.dynamicSource.LoadFromLDAP"
        {{ $role.external.fieldName }}.dynamicValueSource.config: 
        - "nameField=distinguishedName"
        - "valueField=distinguishedName"
        - "searchField=cn"
        - "maxEntries=10"
        {{ if $root.Values.active_directory.group_search_base }}
        - "searchBase={{ $root.Values.active_directory.group_search_base }},ou=activedirectory,o=Data"
        {{ else }}
        - "searchBase=ou=activedirectory,o=Data"
        {{ end }}
        - "errorMessage=Invalid group name"
        - "objectClass=groupofnames"
        - "sort=true"
        {{ else if $root.Values.oidc}}
        {{ if eq $root.Values.oidc.type "okta" }}
        {{ if $role.external.required }}
        {{ $role.external.fieldName }}.type: "text-list-box"
        {{ else }}
        {{ $role.external.fieldName }}.type: "chk-text-list-box"
        {{ end }}
        {{ $role.external.fieldName }}.dynamicValueSource.className: "com.tremolosecurity.scalejs.register.dynamicSource.LoadGroupsFromOkta"
        {{ $role.external.fieldName }}.dynamicValueSource.config: 
        - "targetName=okta"
        - "maxEntries=10"
        - "errorMessage=Invalid group name"
        {{ end }}
        {{ else }}
        {{ $role.external.fieldName }}.type: "text"
        {{ end }}


        {{ end }}
        
        
        
        
        
        
        
        
        
        
        #adminGroup.displayName: "Administrator Group"
        #adminGroup.realOnly: "false"
        #adminGroup.required: "true"
        #adminGroup.regEx: ".*"
        #adminGroup.redExFailedMsg: "Invalid administrator group"
        #adminGroup.minChars: "0"
        #adminGroup.maxChars: "255"
        #adminGroup.unique: "false"
        #{{ if .Values.active_directory }}
        #adminGroup.type: "text-list"
        #adminGroup.dynamicValueSource.className: "com.tremolosecurity.scalejs.register.dynamicSource.LoadFromLDAP"
        #adminGroup.dynamicValueSource.config: 
        #- "nameField=distinguishedName"
        #- "valueField=distinguishedName"
        #- "searchField=cn"
        #- "maxEntries=10"
        #{{ if .Values.active_directory.group_search_base }}
        #- "searchBase={{ .Values.active_directory.group_search_base }},ou=activedirectory,o=Data"
        #{{ else }}
        #- "searchBase=ou=activedirectory,o=Data"
        #{{ end }}
        #- "errorMessage=Invalid group name"
        #- "objectClass=groupofnames"
        #- "sort=true"
        #{{ else if .Values.oidc}}
        #{{ if eq .Values.oidc.type "okta" }}
        #adminGroup.type: "text-list"
        #adminGroup.dynamicValueSource.className: "com.tremolosecurity.scalejs.register.dynamicSource.LoadGroupsFromOkta"
        #adminGroup.dynamicValueSource.config: 
        #- "targetName=okta"
        #- "maxEntries=10"
        #- "errorMessage=Invalid group name"
        #{{ end }}
        #{{ else }}
        #adminGroup.type: "text"
        #{{ end }}

        #viewerGroup.displayName: "Viewer Group"
        #viewerGroup.realOnly: "false"
        #viewerGroup.required: "true"
        #viewerGroup.regEx: ".*"
        #viewerGroup.redExFailedMsg: "Invalid viewer group"
        #viewerGroup.minChars: "0"
        #viewerGroup.maxChars: "255"
        #viewerGroup.unique: "false"
        #{{ if .Values.active_directory }}
        #viewerGroup.type: "text-list"
        #viewerGroup.dynamicValueSource.className: "com.tremolosecurity.scalejs.register.dynamicSource.LoadFromLDAP"
        #viewerGroup.dynamicValueSource.config: 
        #- "nameField=distinguishedName"
        #- "valueField=distinguishedName"
        #- "searchField=cn"
        #- "maxEntries=10"
        #{{ if .Values.active_directory.group_search_base }}
        #- "searchBase={{ .Values.active_directory.group_search_base }},ou=activedirectory,o=Data"
        #{{ else }}
        #- "searchBase=ou=activedirectory,o=Data"
        #{{ end }}

        #- "errorMessage=Invalid group name"
        #- "objectClass=groupofnames"
        #- "sort=true"
        #{{ else if .Values.oidc}}
        #{{ if eq .Values.oidc.type "okta" }}
        #viewerGroup.type: "text-list"
        #viewerGroup.dynamicValueSource.className: "com.tremolosecurity.scalejs.register.dynamicSource.LoadGroupsFromOkta"
        #viewerGroup.dynamicValueSource.config: 
        #- "targetName=okta"
        #- "maxEntries=10"
        #- "errorMessage=Invalid group name"
        #{{ end }}
        #{{ else }}
        #viewerGroup.type: "text"
        #{{ end }}
        #{{ end }}

        {{ if or .Values.openunison.naas.requireReasons (not (hasKey .Values.openunison.naas "requireReasons" )) }}
        requireReason: "true"
        {{ else }}
        requireReason: "false"
        {{ end }}


        gitUrl.displayName: "Git URL"
        gitUrl.readOnly: "false"
        gitUrl.required: "false"
        gitUrl.regEx: "^.*$"
        gitUrl.regExFailedMsg: "Invalid git url"
        gitUrl.minChars: "0"
        gitUrl.maxChars: "0"
        gitUrl.unique: "false"
        gitUrl.type: "text"
        gitUrl.show: "false"

        gitPath.displayName: "Git Path (must start with '/')"
        gitPath.readOnly: "false"
        gitPath.required: "false"
        gitPath.regEx: ""
        gitPath.regExFailedMsg: "Invalid git path"
        gitPath.minChars: "0"
        gitPath.maxChars: "0"
        gitPath.unique: "false"
        gitPath.type: "text"
        gitPath.show: "false"

        gitSshKey.displayName: "Git SSH Private Key"
        gitSshKey.readOnly: "false"
        gitSshKey.required: "false"
        gitSshKey.regEx: ""
        gitSshKey.regExFailedMsg: "Invalid ssh key"
        gitSshKey.minChars: "0"
        gitSshKey.maxChars: "10000"
        gitSshKey.unique: "false"
        gitSshKey.type: "textarea"
        gitSshKey.show: "false"

        callWorkflowInit:
        - workflowName=new-k8s-namespace
        - targetName=k8s
        - projectAttributeName=nameSpace
        jsUris:
        - js/register-functions.js
        - js-ext/functions.js


    uri: /newproject/register
    azRules:
    - scope: dn
      constraint: o=Tremolo
    authChain: login-service
    results:
      azFail: default-login-failure
      auFail: default-login-failure
  cookieConfig:
    sessionCookieName: tremolosession
    domain: "#[OU_HOST]"
    secure: true
    httpOnly: true
    logoutURI: "/logout"
    keyAlias: session-unison
    timeout: {{ .Values.network.session_inactivity_timeout_seconds }}
    scope: -1
    cookiesEnabled: true
{{ end }}