---
apiVersion: openunison.tremolo.io/v1
kind: Application
metadata:
  name: scale
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-{{ .Release.Name }}
    app.kubernetes.io/component: openunison-applications
    app.kubernetes.io/part-of: openunison
  annotations:
    argocd.argoproj.io/sync-wave: "30"
spec:
  azTimeoutMillis: 3000
  isApp: true
  urls:
  - hosts:
    - "#[OU_HOST]"
    filterChain: 
    - className: com.tremolosecurity.proxy.filters.XForward
      params:
        createHeaders: "false"
    - className: com.tremolosecurity.proxy.filters.SetNoCacheHeaders
      params: {}
    uri: "/scale"
    proxyTo: http://ouhtml-{{ .Release.Name }}.{{ .Release.Namespace }}.svc:8080${fullURI}
    authChain: login-service
    overrideHost: true
    overrideReferer: true
    azRules:
    {{ if .Values.openunison.naas.azRules }}
    {{ range .Values.openunison.naas.azRules }}
    - scope: {{ .scope }}
      constraint: {{ .constraint }}
    {{ end }}
    {{ else }}
    - scope: dn
      constraint: o=Tremolo
    {{ end }}
    results: 
      azFail: default-login-failure
      auFail: default-login-failure
  - hosts:
    - "#[OU_HOST]"
    filterChain:
    - className: com.tremolosecurity.scalejs.ws.ScaleMain
      params:
        displayNameAttribute: "{{ .Values.openunison.display_name_attribute | default "sub" }}"
        frontPage.title: "{{ .Values.openunison.title | default "Kubernetes Access Portal" }}"
        frontPage.text: "{{ .Values.openunison.description | default "Use this portal to create and access namespaces in Kubernetes" }}"
        canEditUser: "false"
        workflowName: ""
        warnMinutesLeft: "5"
        sub.displayName: "Login ID"
        sub.readOnly: "true"

        startPage: "{{ .Values.openunison.html.theme.startPage }}"
        {{ if .Values.openunison.html.theme.hidePages }}
        hidePages:
        {{ range .Values.openunison.html.theme.hidePages }}
        - {{ . }}
        {{ end }}
        {{ else }}
        hidePages: []
        {{ end }}
        themePrimaryMain: "{{ .Values.openunison.html.theme.colors.primary.main }}"
        themePrimaryDark: "{{ .Values.openunison.html.theme.colors.primary.dark }}"
        themePrimaryLight: "{{ .Values.openunison.html.theme.colors.primary.light }}"
        themeSecondaryMain: "{{ .Values.openunison.html.theme.colors.secondary.main }}"
        themeSecondaryDark: "{{ .Values.openunison.html.theme.colors.secondary.dark }}"
        themeSecondaryLight: "{{ .Values.openunison.html.theme.colors.secondary.light }}"
        errorColor: "{{ .Values.openunison.html.theme.colors.error }}"
        

        groupFields:
        {{ if .Values.openunison.groups.fields }}
        {{ range .Values.openunison.groups.fields }}
        - {{ . }}
        {{ end }}
        {{ else }}
        - Cluster
        - Namespace
        - Name
        {{ end }}
        groupsAreJson: "{{ .Values.openunison.groups.areJson }}"

        {{ if .Values.openunison.naas.jit_workflow }}
        jitWorkflow: "{{ .Values.openunison.naas.jit_workflow }}"
        {{ end }}
        {{ if .Values.openunison.enable_provisioning }}
        attributeNames: 
        - givenName
        - sub
        - sn
        - mail


        
        givenName.displayName: "First Name"
        givenName.readOnly: "true"

        
        sn.displayName: "Last Name"
        sn.readOnly: "true"

        
        mail.displayName: "Email Address"
        mail.readOnly: "true"
        

        

        approvalAttributeNames: 
        - uid
        - mail
        
        approvalRequestAttributeNames:
        - clusterLabel
        - nameSpace
        {{ range $attr := .Values.openunison.naas.forms.new_namespace.additional_attributes }}
        - {{ $attr.name }}
        {{ end }}

        approvals.clusterLabel: "Cluster"
        approvals.nameSpace: "Namespace"
        {{ range $attr := .Values.openunison.naas.forms.new_namespace.additional_attributes }}
        approvals.{{ $attr.name }}: "{{ $attr.displayName }}"
        {{ end }}

        approvals.uid: Login ID
        approvals.mail: Email Address
        
        canDelegate: "yes"
        canPreApprove: "yes"

        {{ if gt ( len .Values.openunison.naas.reasons ) 0 }}
        reasonIsList: "true"
        reasons:
        {{ range .Values.openunison.naas.reasons }}
        - {{ . | quote }}
        {{ end }}
        {{ else }}
        reasonIsList: "false"
        reasons: []
        {{ end }}

        {{ else }}
        attributeNames: "sub"
        canDelegate: "NO"
        canPreApprove: "NO"
        {{ end }}
        uidAttributeName: uid
        roleAttribute: {{ .Values.openunison.role_attribute }}
        
        showPortalOrgs: "{{ .Values.openunison.non_secret_data.SHOW_PORTAL_ORGS | default "false"  }}"
        logoutURL: "/logout"
        
        {{ if .Values.openunison.enable_provisioning }}
        {{ if .Values.openunison.naas.readOnly }}
        enableApprovals: "false"
        {{ else }}
        enableApprovals: "true"


        {{ if or .Values.openunison.naas.requireReasons (not (hasKey .Values.openunison.naas "requireReasons" )) }}
        requireReason: "true"
        {{ else }}
        requireReason: "false"
        {{ end }}

        {{ end  }}
        
        {{ else }}
        enableApprovals: "false"
        {{ end }}
    uri: /scale/main
    azRules:
    {{ if .Values.openunison.naas.azRules }}
    {{ range .Values.openunison.naas.azRules }}
    - scope: {{ .scope }}
      constraint: {{ .constraint }}
    {{ end }}
    {{ else }}
    - scope: dn
      constraint: o=Tremolo
    {{ end }}
    authChain: login-service
    results:
      azFail: default-login-failure
      auFail: default-login-failure
  cookieConfig:
    sessionCookieName: tremolosession
    domain: "#[OU_HOST]"
    secure: true
    httpOnly: true
    logoutURI: "/logout"
    keyAlias: session-unison
    timeout: {{ .Values.network.session_inactivity_timeout_seconds }}
    scope: -1
    cookiesEnabled: true
    