{{ if .Values.dashboard.enabled }}
{{ if eq (.Values.openunison.non_secret_data.K8S_DB_SSO | default "oidc") "saml2" }}
---
apiVersion: openunison.tremolo.io/v1
kind: Application
metadata:
  name: k8sdb-saml2
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-{{ .Release.Name }}
    app.kubernetes.io/component: openunison-applications
    app.kubernetes.io/part-of: openunison
  annotations:
    argocd.argoproj.io/sync-wave: "30"
spec:
  azTimeoutMillis: 3000
  isApp: false
  urls:
  - hosts:
    - "#[OU_HOST]"
    - "127.0.0.1"
    filterChain: []
    uri: "/auth/idp/k8sdb-saml2"
    azRules:
    {{ if .Values.openunison.enable_provisioning }}
    {{ if .Values.openunison.naas.groups.external.enabled }}
    - constraint: (groups=k8s-cluster-k8s-administrators{{ .Values.openunison.naas.groups.external.suffix }})
      scope: filter
    {{ end }}
    {{ if .Values.openunison.naas.groups.internal.enabled }}
    - constraint: (groups=k8s-cluster-k8s-administrators{{ .Values.openunison.naas.groups.internal.suffix }})
      scope: filter
    {{ end }}
    {{ range $role := .Values.openunison.naas.groups.default }}
    - constraint: (groups=k8s-namespace-{{ $role.name }}-k8s-*)
      scope: filter
    {{ end }}
    {{ range $role := .Values.openunison.naas.groups.roles }}
    - constraint: (groups=k8s-namespace-{{ $role.name }}-k8s-*)
      scope: filter
    {{ end }}
    {{ else }}
    {{ $length := len .Values.openunison.az_groups }}
    {{ if eq $length 0 }}
    - scope: dn
      constraint: o=Tremolo
    {{ else }}
    {{ range $az_group := .Values.openunison.az_groups }}
    - scope: filter
      constraint: (groups={{ $az_group }})
    {{ end }}
    {{ end }}
    {{ end }}
    {{ $length := len .Values.openunison.extra_az_groups }}
    {{ if eq $length 0 }}
    {{ else }}
    {{ range $az_group := .Values.openunison.extra_az_groups }}
    - scope: filter
      constraint: (groups={{ $az_group }})
    {{ end }}
    {{ end }}
    results:
      azFail: default-login-failure
      auFail: default-login-failure
    idp:
      className: com.tremolosecurity.idp.providers.Saml2Idp
      params:
        encKey: ""
        sigKey: "unison-saml2-rp-sig"
        requireSignedAuthn: "true"
        postTemplate: >
          <html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Completing Federation</title></head><body onload="document.forms[0].submit()"><form method="post" action="$postaction$"><input name="SAMLResponse" value="$postdata$" type="hidden"/><input name="RelayState" value="$relaystate$" type="hidden"/></form><center><img src="/auth/forms/images/ts_logo.png" /><br /><h2>Completing Federation...</h2></center></body></html>
      mappings:
        strict: true
        map:
        - targetAttributeName: sub
          targetAttributeSource: sub
          sourceType: user
        - targetAttributeName: name
          targetAttributeSource: ${giveName} ${sn}
          sourceType: composite
        - targetAttributeName: preferred_username
          targetAttributeSource: uid
          sourceType: user
        - targetAttributeName: email
          targetAttributeSource: mail
          sourceType: user
        - targetAttributeName: groups
          targetAttributeSource: groups
          sourceType: user
      trusts:
      - name: "https://#[K8S_DASHBOARD_HOST]/auth/saml2"
        params:
          httpPostRespURL: "https://#[K8S_DASHBOARD_HOST]/auth/saml2"
          spSigKey: unison-saml2-rp-sig
          spEncKey: ""
          signAssertion: "false"
          signResponse: "true"
          defaultNameId: "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"
          defaultAuthCtx: "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport"
          nameIdMap: "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified=sub"
          authCtxMap: "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport=login-service"
  cookieConfig:
    sessionCookieName: tremolosession
    domain: "#[OU_HOST]"
    secure: true
    httpOnly: true
    logoutURI: "/logout"
    keyAlias: session-unison
    timeout: {{ .Values.network.session_inactivity_timeout_seconds }}
    scope: -1
    cookiesEnabled: true
{{ end }}
{{ end }}